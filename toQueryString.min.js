/*
	Angelisium @2019 ~ All right reserved
	2 const : TQSRT and toQueryString
*/
const TQSRT=e=>Object.prototype.toString.call(e).split(" ").reverse()[0].slice(0,-1),toQueryString=(e,r)=>{switch(r=r||0,TQSRT(e)){default:console.error(`Uncaught TypeError: ${Object.prototype.toString.call(e)} is unknown`);case"Null":case"Undefined":case"Function":return r<1?"null":"=null";case"Number":return r<1?e:`=${e}`;case"String":return r<1?encodeURI(e):`=${encodeURI(e)}`;case"Array":let t=[];for(let n=0;n<e.length;n++){let l=toQueryString(e[n],r+1);if("Array"===TQSRT(l))for(let e in l)t.push(`[]${l[e]}`);else t.push(`[]${l}`)}return r<1?t.join("&"):t;case"Object":let n=[];for(let t=0,l=Object.keys(e);t<l.length;t++){let c=toQueryString(e[l[t]],r+1);if("Array"===TQSRT(c))for(let e=0;e<c.length;e++)n.push(`${r<1?l[t]:`[${l[t]}]`}${c[e]}`);else n.push(`${r<1?l[t]:`[${l[t]}]`}${c}`)}return r<1?n.join("&"):n}};